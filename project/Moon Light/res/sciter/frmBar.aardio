import win;
import win.ui;
/*DSG{{*/
var winform = win.form(text="aardio form2";right=759;bottom=469;border="none";exmode="toolwindow";parent=...)
winform.add()
/*}}*/

winform.transparent(true);

import web.sciter;
import web.sciter.behavior;
import web.sciter.behavior.player;
import web.sciter.behavior.volIco;
import web.sciter.behavior.volSlider;
import web.sciter.behavior.audioOutputDevice;
import web.sciter.behavior.reload;
import web.sciter.behavior.stop;
import web.sciter.behavior.blackScreenPatch;
import web.sciter.behavior.popup;
import public;

var mpv = web.sciter.behavior.player.mpv

var wb = web.sciter( winform )

if( isDebug ){
	import web.sciter.debug;
	wb.attachEventHandler( web.sciter.debug );
}

wb.go("/res/bar.html")
var dflag;
var dpool = {};
import win.timer;
var danmutimer = win.timer(, 666);

var webDanmuinit = function(){
	var danmulist = wb.querySelector("div#container > div#danmu");
	var danmuh = danmulist.eval("this.box(#height)");
	var channelh = 30;
	var channels = 25;
	if(danmulist.childCount() &&
						danmulist.child(1).innerHTML){
		channelh = 	danmulist.child(1).eval("this.box(#height, #margin)");
	} else {
		var temp = danmulist.createElement("li");
		temp.style["visibility"] = "hidden";
		temp.innerHTML = "估算高度";
		temp.update(true);
		channelh = 	temp.eval("this.box(#height, #margin)");
		temp.delete();
	}

	if(channelh != 0){
		channels = ..math.floor(danmuh / channelh);
		if(channels > danmulist.childCount()){
			for(i=1;channels - danmulist.childCount();1){
				var temp = danmulist.createElement("li");
				temp.id = tostring(temp.index());
			}	
		}
		elseif(channels < danmulist.childCount()){
			for(i,eleChild in danmulist.eachChild(
								1, danmulist.childCount() - channels, 1)){
				eleChild.delete();
			}
			for(i,eleChild in danmulist.eachChild() ){
				eleChild.id = tostring(eleChild.index());
			}
		}
		
	}
}

import thread.command;
wb.onMenuItemClick = function (scTarget,scOwner,reason,behaviorParams) {
	if( scTarget.class == "output-device-item" ){
		mpv.setOutputDevice( scTarget["device-name"] )
	}
}
wb.onButtonClick = function (scTarget,scOwner,reason,behaviorParams) {
	if(scTarget.name == "sidebar"){
		if(scTarget.state["checked"]){
			..thread.set("sidebarchecked", true);
			scTarget.parent().$1(".danmuico").state["checked"] = false;
		} else {
			..thread.set("sidebarchecked", false);
		}
		if(!scTarget.parent().$1(".danmuico").state["checked"]){
			scTarget.parent().parent().$1("#danmu").style["visibility"] = "none";
		}
		..thread.command.sidebarCtrl();
	}
	if(scTarget.name == "danmuico"){
		if(scTarget.state.checked){
			scTarget.parent().$1(".sidebar").state["checked"] = false;
			scTarget.parent().parent().$1("#danmu").style["visibility"] = "visible";
			..thread.set("sidebarchecked", false);
			..thread.command.sidebarCtrl();
		}
		else {
			scTarget.parent().parent().$1("#danmu").style["visibility"] = "none";
		}
		
		webDanmuinit();
	}
}
wb.onSize = function (scOwner) {
	webDanmuinit();
}


var addDanmu = function(sdk, interhtml, ...){
    dflag = true;
	var danmulist = wb.querySelector("div#container > div#danmu");
	var danmuflag = wb.querySelector("#container > #bottom .danmuico");
	if( !danmulist ){
		dflag = false;
		return ; 
	}
	var ch = 0;
	var danmuw = danmulist.eval("this.box(#width, #margin)");
	if(danmulist.childCount() && danmuflag.state.checked){
		for(i=1;danmulist.childCount();1){
			for(j,eleChild in danmulist.child(i).eachChild() ){
				if(!eleChild.state["animating"]){
					eleChild.delete();
				}
			}
			if(!danmulist.child(i).childCount()){
				ch = i;
				break;
			} else {
				var nums = danmulist.child(i).childCount();
				var lastd = danmulist.child(i).child(nums);
				var lasttn = tonumber(lastd.timenode);
				var lastsn= tonumber(lastd.speednode);
				var lastdt = tonumber(lastd.dtnode);
				var timenode = time().getMilliTime();
				var lastl = lastd.eval("this.box(#width, #margin)");
				var distance = lastsn * (timenode - lasttn) - lastl;
				if(distance > 0){
					var divadd = danmulist.child(i).createElement("div");
					divadd.style["visibility"] = "hidden";
					divadd.innerHTML = interhtml;
					divadd.update(true);
					var divw = divadd.eval("this.box(#width, #margin)");
					var ddt = divadd.eval("this.style.variable('ddt')");
					//var speednode = ..math.sqrt((danmuw + divw) / danmuw) *
										//danmuw / ddt + 0.2;
					var speednode = (danmuw + divw) / ddt;
					var dtnode = (danmuw + divw) / speednode;
					
					if(speednode <= lastsn){
						ch = i;
						divadd.delete();
						break;
					}
					elseif(distance / (speednode - lastsn) >=
									lastdt - (timenode - lasttn)){
						ch = i;
						divadd.delete();
						break;
					}
				}	
			}
		}
		if(ch = 0){
			..table.push(dpool, {sdk; interhtml; ...});
			..console.dump(dpool);
			danmutimer.enable();
			dflag = false;
		} else {
			var divadd = danmulist.child(ch).createElement("div", interhtml);
			divadd.eval(..string.format(
						"this.style.variable('liw', px(%i))", danmuw));
			var divw = divadd.eval("this.box(#width, #margin)");
			var timenode = time().getMilliTime();
			var ddt = divadd.eval("this.style.variable('ddt')");
			//var speednode = ..math.sqrt((danmuw + divw) / danmuw) *
								//danmuw / ddt + 0.2;
			var speednode = (danmuw + divw) / ddt;
			var dtnode = (danmuw + divw) / speednode;
			divadd.timenode = tostring(timenode);
			divadd.speednode = tostring(speednode);
			divadd.dtnode = tostring(ddt);
			//divadd.eval(..string.format(
						//"this.style.variable('ddt', %f)", dtnode));
			divadd.eval(..string.format(
						"this.style.variable('divw', px(0 - %i))", divw));
			divadd.move = "set";
			divadd.update(true);
			dflag = false;
		}
	}
}
danmutimer.onTimer = function(){
	if(!dflag && #dpool){
		var sdk, interhtml, other = dpool.shift();
		addDanmu(sdk, interhtml, other);
	}
	elseif(!(#dpool)){
		danmutimer.disable();
	}
	..console.dump("timer");
	
}

var listener = thread.command();
listener.pushdanmu = function(sdk, s, txt, ...){
	var danmutime = tostring(time(time(), "%H:%M:%S"));
	var interhtml;
	select(s.type) {
		case "chatmsg" {
			var htmls = /*%s %s[lv%s]：%s*/; 
			interhtml = string.format(htmls, danmutime, s.nn, s.level, s.txt);
			addDanmu(sdk, interhtml, ...);
		}
		case "uenter" {
			var htmls = /*%s %s[lv%s]：进入 %s 直播间*/; 
			interhtml = string.format(htmls, danmutime, s.nn, s.level, s.rid);
			//addDanmu(sdk, interhtml, ...);
		}
		case "ssd" {
			var htmls = /*%s <span id="nn"><a href="%s">%s</a></span>*/; 
			interhtml = string.format(htmls, danmutime, s.url, s.content);
			//addDanmu(sdk, interhtml, ...);
		}
		else {
		}
	}

}

wb.wait();
/*
if(_STUDIO_INVOKED){
	wb.doScript(`
		if( view.connectToInspector ) // the view is in debug mode
			view.connectToInspector();
	`)	
}
*/

winform.enableDpiScaling();
winform.show(false);
//win.loopMessage();
return winform;