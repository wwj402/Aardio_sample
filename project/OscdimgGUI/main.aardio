import win.ui;
import win.ui.statusbar;
import fsys.dlg;
import fsys.file;
import fsys.path;
import fsys.ini;
import web.form;
import process;
import process.popen;
/*DSG{{*/
mainForm = win.form(text="oscdimgGUI";right=1034;bottom=629)
mainForm.add(
button={cls="button";text="选择";left=535;top=15;right=615;bottom=40;ah=1;aw=1;tabstop=1;z=3};
button2={cls="button";text="选择";left=535;top=45;right=615;bottom=70;ah=1;aw=1;tabstop=1;z=6};
button3={cls="button";text="选择";left=535;top=75;right=615;bottom=100;ah=1;aw=1;tabstop=1;z=9};
button4={cls="button";text="选择";left=535;top=105;right=615;bottom=130;ah=1;aw=1;tabstop=1;z=12};
button5={cls="button";text="选择";left=535;top=135;right=615;bottom=160;ah=1;aw=1;tabstop=1;z=20};
button6={cls="button";text="选择";left=535;top=195;right=615;bottom=220;ah=1;aw=1;tabstop=1;z=19};
button7={cls="button";text="执行";left=535;top=560;right=615;bottom=585;ah=1;aw=1;tabstop=1;z=45};
checkbox={cls="checkbox";text="ISO 9660";left=30;top=250;right=100;bottom=275;ah=1;aw=1;tabstop=1;z=22};
checkbox10={cls="checkbox";text="-j1 兼容 DOS 8.3 命名 的 ISO 9660";left=30;top=365;right=240;bottom=390;ah=1;aw=1;tabstop=1;z=34};
checkbox11={cls="checkbox";text="-j2 仅 Joliet 文件系统";left=245;top=365;right=380;bottom=390;ah=1;aw=1;tabstop=1;z=35};
checkbox12={cls="checkbox";text="-js 不支持 Joliet 时的提醒文本文件";left=390;top=365;right=605;bottom=390;ah=1;aw=1;tabstop=1;z=36};
checkbox13={cls="checkbox";text="-u1 兼容 DOS 8.3 命名 的 ISO 9660";left=30;top=425;right=240;bottom=450;ah=1;aw=1;tabstop=1;z=38};
checkbox14={cls="checkbox";text="-u2 仅 UDF 文件系统";left=245;top=425;right=380;bottom=450;ah=1;aw=1;tabstop=1;z=39};
checkbox15={cls="checkbox";text="-ur 不支持 UDF 时的提醒文本文件";left=390;top=425;right=605;bottom=450;ah=1;aw=1;tabstop=1;z=40};
checkbox16={cls="checkbox";text="总是32位";left=535;top=500;right=615;bottom=525;z=52};
checkbox17={cls="checkbox";text="软盘模拟";left=525;top=250;right=605;bottom=275;ah=1;aw=1;tabstop=1;z=53};
checkbox18={cls="checkbox";text="模拟";left=535;top=530;right=615;bottom=555;z=56};
checkbox19={cls="checkbox";text="相对路径";left=460;top=560;right=530;bottom=585;z=57};
checkbox2={cls="checkbox";text="Joliet";left=110;top=250;right=180;bottom=275;ah=1;aw=1;tabstop=1;z=23};
checkbox3={cls="checkbox";text="UDF";left=190;top=250;right=260;bottom=275;ah=1;aw=1;tabstop=1;z=24};
checkbox4={cls="checkbox";text="BIOS";left=290;top=250;right=360;bottom=275;ah=1;aw=1;tabstop=1;z=26};
checkbox5={cls="checkbox";text="UEFI 32";left=365;top=250;right=435;bottom=275;ah=1;aw=1;tabstop=1;z=27};
checkbox6={cls="checkbox";text="UEFI 64";left=445;top=250;right=515;bottom=275;ah=1;aw=1;tabstop=1;z=28};
checkbox7={cls="checkbox";text="-d 允许小写文件名";left=30;top=305;right=160;bottom=330;ah=1;aw=1;tabstop=1;z=30};
checkbox8={cls="checkbox";text="-n 允许超过 DOS 8.3 的长文件名";left=170;top=305;right=375;bottom=330;ah=1;aw=1;tabstop=1;z=31};
checkbox9={cls="checkbox";text="-nt 兼容 NT 3.51 的长文件名";left=390;top=305;right=605;bottom=330;ah=1;aw=1;tabstop=1;z=32};
combobox={cls="combobox";left=30;top=455;right=595;bottom=480;ah=1;aw=1;edge=1;items={"-udfver102  指定UDF文件系统版本1.02（支持：Windows 98及更高版本）";"-udfver150  指定UDF文件系统版本1.50（支持：Windows 2000及更高版本）";"-udfver200  指定UDF文件系统版本2.00（支持：Windows XP及更高版本）"};mode="dropdownlist";tabstop=1;z=41};
edit={cls="edit";left=135;top=15;right=525;bottom=40;acceptfiles=1;ah=1;aw=1;edge=1;tabstop=1;z=2};
edit10={cls="edit";left=85;top=530;right=270;bottom=555;acceptfiles=1;ah=1;aw=1;edge=1;tabstop=1;z=49};
edit11={cls="edit";left=340;top=530;right=525;bottom=555;acceptfiles=1;ah=1;aw=1;edge=1;tabstop=1;z=51};
edit12={cls="edit";left=85;top=560;right=455;bottom=585;acceptfiles=1;ah=1;aw=1;edge=1;tabstop=1;z=55};
edit2={cls="edit";left=135;top=45;right=525;bottom=70;acceptfiles=1;ah=1;aw=1;edge=1;tabstop=1;z=5};
edit3={cls="edit";left=135;top=75;right=525;bottom=100;acceptfiles=1;ah=1;aw=1;edge=1;tabstop=1;z=8};
edit4={cls="edit";left=135;top=105;right=525;bottom=130;acceptfiles=1;ah=1;aw=1;edge=1;tabstop=1;z=11};
edit5={cls="edit";left=135;top=135;right=525;bottom=160;acceptfiles=1;ah=1;aw=1;edge=1;tabstop=1;z=14};
edit6={cls="edit";left=135;top=165;right=289;bottom=190;acceptfiles=1;ah=1;aw=1;edge=1;tabstop=1;z=16};
edit7={cls="edit";left=135;top=195;right=525;bottom=220;acceptfiles=1;ah=1;aw=1;edge=1;tabstop=1;z=18};
edit8={cls="edit";left=85;top=500;right=270;bottom=525;acceptfiles=1;ah=1;aw=1;edge=1;tabstop=1;z=44};
edit9={cls="edit";left=340;top=500;right=525;bottom=525;acceptfiles=1;ah=1;aw=1;edge=1;tabstop=1;z=47};
groupbox={cls="groupbox";text="光盘文件系统";left=20;top=225;right=270;bottom=280;ah=1;aw=1;edge=1;z=21};
groupbox2={cls="groupbox";text="光盘启动模式";left=280;top=225;right=615;bottom=280;ah=1;aw=1;edge=1;z=25};
groupbox3={cls="groupbox";text="ISO 9660 选项";left=20;top=285;right=615;bottom=340;ah=1;aw=1;edge=1;z=29};
groupbox4={cls="groupbox";text="Joliet 选项";left=20;top=345;right=615;bottom=400;ah=1;aw=1;edge=1;z=33};
groupbox5={cls="groupbox";text="UDF 选项";left=20;top=405;right=615;bottom=485;ah=1;aw=1;edge=1;z=37};
static={cls="static";text="核心文件目录";left=20;top=15;right=120;bottom=40;ah=1;aw=1;center=1;notify=1;transparent=1;z=1};
static10={cls="static";text="系统参数";left=20;top=530;right=80;bottom=555;ah=1;aw=1;center=1;notify=1;transparent=1;z=48};
static11={cls="static";text="启动参数";left=275;top=530;right=335;bottom=555;ah=1;aw=1;center=1;notify=1;transparent=1;z=50};
static12={cls="static";text="命令行";left=20;top=560;right=80;bottom=585;ah=1;aw=1;center=1;notify=1;transparent=1;z=54};
static2={cls="static";text="ISO 打包目录";left=20;top=45;right=120;bottom=70;ah=1;aw=1;center=1;notify=1;transparent=1;z=4};
static3={cls="static";text="BIOS 引导文件";left=20;top=75;right=120;bottom=100;ah=1;aw=1;center=1;notify=1;transparent=1;z=7};
static4={cls="static";text="UEFI 引导文件";left=20;top=105;right=130;bottom=130;ah=1;aw=1;center=1;notify=1;transparent=1;z=10};
static5={cls="static";text="引导顺序文件";left=20;top=135;right=130;bottom=160;ah=1;aw=1;center=1;notify=1;transparent=1;z=13};
static6={cls="static";text="ISO 卷标";left=20;top=165;right=120;bottom=190;ah=1;aw=1;center=1;notify=1;transparent=1;z=15};
static7={cls="static";text="ISO 保存路径";left=20;top=195;right=120;bottom=220;ah=1;aw=1;center=1;notify=1;transparent=1;z=17};
static8={cls="static";text="杂项参数";left=20;top=500;right=80;bottom=525;ah=1;aw=1;center=1;notify=1;transparent=1;z=43};
static9={cls="static";text="顺序参数";left=275;top=500;right=335;bottom=525;ah=1;aw=1;center=1;notify=1;transparent=1;z=46};
tab={cls="tab";left=640;top=15;right=1025;bottom=585;ah=1;aw=1;edge=1;z=42}
)
/*}}*/

var helptab = web.form(mainForm.tab.add(text="帮助"));
helptab.go("\res\index.html");
/*
var statustab = mainForm.tab.add(text="输出");
statustab.add(edit={cls="edit";ah=1;aw=1;hscroll=1;multiline=1;vscroll=1});
*/
var initab = mainForm.tab.loadForm("\dlg\frmtabini.aardio");
var outputtab = mainForm.tab.loadForm("\dlg\frmtaboutput.aardio");
var statusbar = win.ui.statusbar(mainForm);

if(_STUDIO_INVOKED){
	import console;
	console.open();
}

var ininame = io._exefile + ".ini";
var inimappars = {
			core_dir = "edit";
			root_dir = "edit2";
			bios_bin = "edit3";
			efi_bin = "edit4";
			boot_order = "edit5";
			iso_vol = "edit6";
			iso_path = "edit7";
			other_par = "edit8";
			order_par = "edit9";
			fsys_par = "edit10";
			mboot_par = "edit11";
			cmdline_par = "edit12";
			sys_files = "sys_files";
			sys_dirs = "sys_dirs";
};
var ini_pars;
var pattern = "<@%s@>";
var homedir = "\";
var exepath = "";
var default_pars = {
			core_dir = "core";
			root_dir = "isoroot";
			bios_bin = "core\etfsboot.com";
			efi32_bin = "core\efisys_noprompt.bin";
			efi64_bin = "core\efisys_noprompt_x64.bin";
			efiall_bin = "core\efisys_all.bin";
			efi_text = "EFI 引导文件";
			efi_text32 = "（32位）";
			efi_text64 = "（64位）";
			efi_textall = "（合一）";
			boot_order = "BootOrder.txt";
			sys_files = {"bootmgr"; "bootmgr.efi"; "grldr"};
			sys_dirs = {"boot"; "efi"; "sources"};
			iso_vol = "my_iso";
			iso_path = "my_iso.ISO";
			bios = true;
			efi32 = true;
			efi64 = true;
			emulate = false;
			iso9660 = false;
			joliet = false;
			udf = true;
			udf_ver = "-udfver102";
			other_par = "-o -m -h -l%s";
			order_par = '-yo"%s"';
			fsys_par = "%s";
			mboot_par = '-bootdata:2#p0,e,b"%s"#pEF,e,b"%s"';
			sboot_par = '-b"%s"';
			alter = "readme.txt";
			cmd_par = '"%s" %s %s %s %s "%s" "%s"';
};

var readIniPar = function(...){
	var inipath;
	if(...){
		inipath = ...;
		inipath = io.fullpath(inipath);
	}
	else {
		inipath = io.joinpath(homedir, ininame);
	}
	if(io.exist(inipath)){
		var iniobj = fsys.ini(inipath);

		var inisec = iniobj.getSection(fsys.getFileName(inipath));
/*
		for(k,v in inimappars){
			for(name,ctrl in mainForm.eachControl("edit")){
				if(v == name){
					ctrl.text = inisec[k];
					break;
				}
			}
		}
*/
		if(inisec){
			return inisec;
		}
	}
	return default_pars;
}

var saveIniPar = function(...){
	var inipath;
	if(...){
		inipath = ...;
		inipath = io.fullpath(inipath);
	}
	else {
		inipath = io.joinpath(homedir, ininame);
	}
	var iniobj = fsys.ini(inipath);
	var inisec = iniobj.getSection(fsys.getFileName(inipath));
	for(k,v in inimappars){
		if(!inisec[k] or inisec[k] == ""){
			if(type(default_pars[v]) == type.table){
				inisec[k] = table.tostring(default_pars[v]);
			}
			else {
				inisec[k] = default_pars[v];
			}
		}
		for(name,ctrl in mainForm.eachControl("edit")){
			if(v == name){
				inisec[k] = ctrl.text;
				break;
			}
		}
	}
	inisec.save();
}

var setOtherPar = function(...){
		mainForm.edit8.text = string.format(default_pars.other_par,
								mainForm.edit6.text);
}

var createOrder = function(...){
	fsys.setCurDir(homedir);
	var fileid = fsys.file(mainForm.edit5.text,"w");
	var filelist;
	if(ini_pars.sys_files){
		filelist = eval(ini_pars.sys_files) : default_pars.sys_files;
	}
	else {
		filelist = default_pars.sys_files;
	}
	for(k,v in filelist){
		fileid.write(string.fromto(v + '\r\n', 65001, 0));
	}
	if(io.exist(mainForm.edit2.text)){
		fsys.enum(mainForm.edit2.text, "*.*",
			function(dir,filename,fullpath,findData){
				var rpath = fsys.path.relative(fullpath,
						mainForm.edit2.text, false) + '\r\n';
				if(filename){
					if(findData.nFileSizeLow < 2**21){
/*
						string.save(mainForm.edit5.text,
							string.fromto(rpath, 65001, 0), true);
*/
						var sflag = false;
						for(k,v in filelist){
							if(v == rpath){
								sflag = true;
								break;
							}
							else {
								sflag = false;
							}
						}
						if(!sflag){
							fileid.write(string.fromto(rpath, 65001, 0));
						}
					}
				}
			}
			, false/*如果此参数为false则忽略子目录*/
		);
	}
	if(ini_pars.sys_dirs){
		filelist = eval(ini_pars.sys_dirs) : default_pars.sys_dirs;
	}
	else {
		filelist = default_pars.sys_dirs;
	}
	for(k,v in filelist){
		if(io.exist(io.joinpath(mainForm.edit2.text, v))){
			fsys.enum(io.joinpath(mainForm.edit2.text, v), "*.*",
				function(dir,filename,fullpath,findData){
					var rpath = fsys.path.relative(fullpath,
							mainForm.edit2.text, false) + '\r\n';
					if(filename){
/*
						string.save(mainForm.edit5.text,
							string.fromto(rpath, 65001, 0), true);
*/
						fileid.write(string.fromto(rpath, 65001, 0));
					}
				}
				,/*如果此参数为false则忽略子目录*/
			);
		}
	}
	fileid.close();
/*
	import fsys.codepage;
	var ustr = fsys.codepage.load(mainForm.edit5.text);
	fsys.codepage.save(mainForm.edit5.text, ustr, 0);
*/
}

var setOrderPar = function(...){
	fsys.setCurDir(homedir);
	if(mainForm.edit5.text and (mainForm.edit5.text != "")){
		mainForm.edit9.text = string.format(default_pars.order_par,
								mainForm.edit5.text);
	}
	else {
		mainForm.edit9.text = "";
	}
}

var setFsysPar = function(...){
	fsys.setCurDir(homedir);
	if(!mainForm.checkbox.checked and !mainForm.checkbox2.checked and
							!mainForm.checkbox3.checked){
		mainForm.checkbox3.disabled = false;
		mainForm.checkbox3.checked = true;
		mainForm.checkbox13.disabled = false;
		mainForm.checkbox14.disabled = false;
		mainForm.checkbox15.disabled = false;
		mainForm.combobox.disabled = false;
	}
	var pars = "";
	for(name,ctrl in mainForm.eachControl("checkbox", "") ){
		if(!ctrl.disabled){
			if(ctrl.checked){
				var par = string.match(ctrl.text, "-\w+");
				if(par){
					select(par) {
						case "-js", "-ur" {
							if(pars != ""){
								pars = pars + " " + par + '"' +
										default_pars.alter + '"';
							}
							else {
								pars = pars + par + '"' +
										default_pars.alter + '"';
							}
						}
						else {
							if(pars != ""){
								pars = pars + " " + par;
							}
							else {
								pars += par;
							}
						}
					}
				}
			}
		}
	}
	for(name,ctrl in mainForm.eachControl("combobox", "combobox") ){
		if(!ctrl.disabled){
			var par = string.match(ctrl.selText, "-\w+");
			if(par){
				if(pars != ""){
					pars = pars + " " + par;
				}
				else {
					pars += par;
				}
			}
		}
	}
	mainForm.edit10.text = pars;
}
var setBootPar = function(...){
	fsys.setCurDir(homedir);
	var pars = "";
	var num = 0;
	var flag = "";
	for(name,ctrl in mainForm.eachControl("edit", "edit[34]") ){
		if(!ctrl.disabled){
			num ++;
		}
	}
	select(num) {
		case 1 {
			for(name,ctrl in mainForm.eachControl("edit", "edit[34]") ){
				if(!ctrl.disabled){
					if(name = "edit3"){
						flag = "bios";
					}
					if(name = "edit4"){
						flag = "efi";
					}
				}
			}
			select(flag) {
				case "bios" {
					if(mainForm.checkbox17.checked){
						mainForm.edit11.text = string.format(
										default_pars.sboot_par,
											mainForm.edit3.text + " -p0");

					}
					else {
						mainForm.edit11.text = string.format(
										default_pars.sboot_par,
											mainForm.edit3.text + " -e -p0");
					}

				}
				case "efi" {
					if(mainForm.checkbox17.checked){
						mainForm.edit11.text = string.format(
										default_pars.sboot_par,
											mainForm.edit4.text + " -pEF");
					}
					else {
						mainForm.edit11.text = string.format(
										default_pars.sboot_par,
											mainForm.edit4.text + " -e -pEF");
					}
				}
				else {
				}
			}
		}
		case 2 {
			if(mainForm.checkbox17.checked){
				mainForm.edit11.text = string.format(default_pars.mboot_par,
								mainForm.edit3.text, mainForm.edit4.text);
				mainForm.edit11.text = string.replace(mainForm.edit11.text,
											",e", "");
			}
			else {
				mainForm.edit11.text = string.format(default_pars.mboot_par,
								mainForm.edit3.text, mainForm.edit4.text);
			}
		}
		else {
			mainForm.edit11.text = "";
		}
	}
}

var setExePath = function(...){
	fsys.setCurDir(homedir);
	var userdir;
	if(...){
		userdir = ...;
	}
	else {
		userdir = mainForm.edit.text;
	}

	if(process().isWow64() and !mainForm.checkbox16.checked){
		exepath = io.joinpath(userdir, "oscdimgx64.exe");
	}
	else {
		exepath = io.joinpath(userdir, "oscdimg.exe");
	}
	if(!io.exist(exepath)){
		win.msgboxErr(exepath + "不存在。");
	}
	else {
		return exepath;
	}

}

var setCmdPar = function(...){
	setExePath();
	if(string.match(mainForm.edit8.text, "-[qQ]")){
		mainForm.edit12.text = string.format('"%s" %s %s %s %s "%s"',
			exepath, mainForm.edit8.text, mainForm.edit9.text,
			mainForm.edit10.text, mainForm.edit11.text, mainForm.edit2.text);
	}
	else {
		mainForm.edit12.text = string.format(default_pars.cmd_par,
			exepath, mainForm.edit8.text, mainForm.edit9.text, mainForm.edit10.text,
			mainForm.edit11.text, mainForm.edit2.text, mainForm.edit7.text);
	}
}

var initPars = function(default_pars, ini_pars){
	fsys.setCurDir(homedir);
	mainForm.edit.text = ini_pars.core_dir : default_pars.core_dir;
	mainForm.edit2.text = ini_pars.root_dir : default_pars.root_dir;
	mainForm.edit3.text = ini_pars.bios_bin : default_pars.bios_bin;
	mainForm.static4.text = default_pars.efi_text + default_pars.efi_textall;
	mainForm.edit4.text = ini_pars.efi_bin : default_pars.efiall_bin;
	mainForm.edit5.text = ini_pars.boot_order : default_pars.boot_order;
	mainForm.edit6.text = ini_pars.iso_vol : default_pars.iso_vol;
	mainForm.edit7.text = ini_pars.iso_path : default_pars.iso_path;
	if(default_pars.bios){
		mainForm.checkbox4.checked = true;
	}
	if(default_pars.efi32){
		mainForm.checkbox5.checked = true;
	}
	if(default_pars.efi64){
		mainForm.checkbox6.checked = true;
	}
	if(default_pars.emulate){
		mainForm.checkbox17.checked = true;
	}
	if(default_pars.iso9660){
		mainForm.checkbox.checked = true;
		mainForm.checkbox2.checked = false;
		mainForm.checkbox3.checked = false;
	}
	if(default_pars.joliet){
		mainForm.checkbox.checked = false;
		mainForm.checkbox2.checked = true;
		//mainForm.checkbox3.checked = false;
	}
	if(default_pars.udf){
		mainForm.checkbox.checked = false;
		//mainForm.checkbox2.checked = false;
		mainForm.checkbox3.checked = true;
	}
	if(!mainForm.checkbox.checked){
		mainForm.checkbox7.disabled = true;
		mainForm.checkbox8.disabled = true;
		mainForm.checkbox9.disabled = true;
	}
	else {
		mainForm.checkbox7.checked = true;
		mainForm.checkbox8.checked = true;
		mainForm.checkbox9.checked = false;
	}
	if(!mainForm.checkbox2.checked){
		mainForm.checkbox10.disabled = true;
		mainForm.checkbox11.disabled = true;
		mainForm.checkbox12.disabled = true;
	}
	else {
		mainForm.checkbox10.checked = true;
		mainForm.checkbox11.checked = false;
		mainForm.checkbox12.checked = false;
	}
	if(!mainForm.checkbox3.checked){
		mainForm.checkbox13.disabled = true;
		mainForm.checkbox14.disabled = true;
		mainForm.checkbox15.disabled = true;
		mainForm.combobox.disabled = true;
	}
	else {
		mainForm.checkbox13.checked = true;
		mainForm.checkbox14.checked = false;
		mainForm.checkbox15.checked = false;
		mainForm.combobox.disabled = false;
	}
	mainForm.combobox.selectString(default_pars.udf_ver, 1);
	setOtherPar();
	if(!io.exist(mainForm.edit5.text)){
		createOrder();
	}
	setOrderPar();
	setFsysPar();
	setBootPar();
	setCmdPar();
}

if(#_ARGV){
	fsys.setCurDir(homedir);
	for(k,v in _ARGV){
		if(io.exist(v)){
			var inipath = v;
			var iniobj = fsys.ini(inipath);
			var inisec = iniobj.getSection(fsys.getFileName(inipath));
			if(!inisec){
				inisec = iniobj.getSection(fsys.getFileName(ininame));
			}
			setExePath(inisec["core_dir"]);
			var exestr = default_pars.cmd_par;
			exestr = string.format(exestr, exepath,
							inisec["other_par"], inisec["order_par"],
							inisec["fsys_par"], inisec["mboot_par"],
							inisec["root_dir"], inisec["iso_path"]);
			process(exestr);
		}
	}
	return;
}

if(io.exist(io.joinpath(homedir, ininame))){
	ini_pars = readIniPar();
}
else {
	ini_pars = {};
}

initPars(default_pars, ini_pars);

mainForm.button.oncommand = function(id,event){
	var dir_name = fsys.dlg.opendir(mainForm.edit.text);
	if(dir_name){
		mainForm.edit.text = dir_name;
	}
}

mainForm.button2.oncommand = function(id,event){
	var dir_name = fsys.dlg.opendir(mainForm.edit2.text);
	if(dir_name){
		mainForm.edit2.text = dir_name;
	}
}

mainForm.button3.oncommand = function(id,event){
	fsys.setCurDir(homedir);
	var path_parse = io.splitpath(mainForm.edit3.text);
	//console.dump(path_parse);
	var file_name = fsys.dlg.open("引导文件(*.bin;*.com)|*.bin;*.com|所有文件(*.*)|*.*",
							,path_parse.dir, , ,path_parse.file);
	if(file_name){
		mainForm.edit3.text = file_name;
	}
}

mainForm.button4.oncommand = function(id,event){
	fsys.setCurDir(homedir);
	var path_parse = io.splitpath(mainForm.edit4.text);
	//console.dump(path_parse);
	var file_name = fsys.dlg.open("引导文件(*.bin;*.com)|*.bin;*.com|所有文件(*.*)|*.*",
							,path_parse.dir, , ,path_parse.file);
	if(file_name){
		mainForm.edit4.text = file_name;
	}
}

mainForm.button5.oncommand = function(id,event){
	fsys.setCurDir(homedir);
	var path_parse = io.splitpath(mainForm.edit5.text);
	var file_name = fsys.dlg.open("文本文件(*.txt;*.ini)|*.txt;*.ini|所有文件(*.*)|*.*",
							,path_parse.dir, , ,path_parse.file);
	if(file_name){
		mainForm.edit5.text = file_name;
	}
}

mainForm.button6.oncommand = function(id,event){
	fsys.setCurDir(homedir);
	var path_parse = io.splitpath(mainForm.edit7.text);
	var file_name = fsys.dlg.open("镜像文件(*.bin;*.iso)|*.bin;*.iso|所有文件(*.*)|*.*",
							,path_parse.dir, , ,path_parse.file);
	if(file_name){
		mainForm.edit7.text = file_name;
	}
}

mainForm.checkbox.oncommand = function(id,event){
	if(mainForm.checkbox.checked){
		mainForm.checkbox2.checked = false;
		mainForm.checkbox3.checked = false;
		mainForm.checkbox7.disabled = false;
		mainForm.checkbox8.disabled = false;
		mainForm.checkbox9.disabled = false;
		mainForm.checkbox7.checked = true;
		mainForm.checkbox8.checked = true;
		mainForm.checkbox10.disabled = true;
		mainForm.checkbox11.disabled = true;
		mainForm.checkbox12.disabled = true;
		mainForm.checkbox13.disabled = true;
		mainForm.checkbox14.disabled = true;
		mainForm.checkbox15.disabled = true;
		mainForm.combobox.disabled = true;
	}
	else {
		mainForm.checkbox7.disabled = true;
		mainForm.checkbox8.disabled = true;
		mainForm.checkbox9.disabled = true;
	}
	setFsysPar();
}

mainForm.checkbox2.oncommand = function(id,event){
	if(mainForm.checkbox2.checked){
		mainForm.checkbox.checked = false;
		//mainForm.checkbox3.checked = false;
		mainForm.checkbox7.disabled = true;
		mainForm.checkbox8.disabled = true;
		mainForm.checkbox9.disabled = true;
		mainForm.checkbox10.disabled = false;
		mainForm.checkbox11.disabled = false;
		mainForm.checkbox12.disabled = false;
		mainForm.checkbox10.checked = true;
		//mainForm.checkbox13.disabled = true;
		//mainForm.checkbox14.disabled = true;
		//mainForm.checkbox15.disabled = true;
		//mainForm.combobox.disabled = true;
	}
	else {
		mainForm.checkbox10.disabled = true;
		mainForm.checkbox11.disabled = true;
		mainForm.checkbox12.disabled = true;
	}
	setFsysPar();
}

mainForm.checkbox3.oncommand = function(id,event){
	if(mainForm.checkbox3.checked){
		mainForm.checkbox.checked = false;
		//mainForm.checkbox2.checked = false;
		mainForm.checkbox7.disabled = true;
		mainForm.checkbox8.disabled = true;
		mainForm.checkbox9.disabled = true;
		//mainForm.checkbox10.disabled = true;
		//mainForm.checkbox11.disabled = true;
		//mainForm.checkbox12.disabled = true;
		mainForm.checkbox13.disabled = false;
		mainForm.checkbox14.disabled = false;
		mainForm.checkbox15.disabled = false;
		mainForm.combobox.disabled = false;
		mainForm.checkbox13.checked = true;
	}
	else {
		mainForm.checkbox13.disabled = true;
		mainForm.checkbox14.disabled = true;
		mainForm.checkbox15.disabled = true;
		mainForm.combobox.disabled = true;
	}
	setFsysPar();
}

mainForm.checkbox4.oncommand = function(id,event){
	if(!mainForm.checkbox4.checked){
		mainForm.edit3.disabled = true;
		mainForm.button3.disabled = true;
	}
	else {
		mainForm.edit3.disabled = false;
		mainForm.button3.disabled = false;
	}
	setBootPar();
}

mainForm.checkbox5.oncommand = function(id,event){
	if(mainForm.checkbox5.checked and mainForm.checkbox6.checked){
		mainForm.static4.text = default_pars.efi_text + default_pars.efi_textall;
		var newname = io.joinpath(mainForm.edit.text,
							fsys.getFileName(default_pars.efiall_bin));
		if(io.exist(newname)){
			mainForm.edit4.text = newname;
		}
	}
	elseif(mainForm.checkbox5.checked){
		mainForm.static4.text = default_pars.efi_text + default_pars.efi_text32;
		var newname = io.joinpath(mainForm.edit.text,
							fsys.getFileName(default_pars.efi32_bin));
		if(io.exist(newname)){
			mainForm.edit4.text = newname;
		}
		mainForm.edit4.disabled = false;
		mainForm.button4.disabled = false;
	}
	elseif(mainForm.checkbox6.checked){
		mainForm.static4.text = default_pars.efi_text + default_pars.efi_text64;
		var newname = io.joinpath(mainForm.edit.text,
							fsys.getFileName(default_pars.efi64_bin));
		if(io.exist(newname)){
			mainForm.edit4.text = newname;
		}
	}
	else {
		mainForm.static4.text = default_pars.efi_text;
		mainForm.edit4.disabled = true;
		mainForm.button4.disabled = true;
	}
	setBootPar();
}

mainForm.checkbox6.oncommand = function(id,event){
	if(mainForm.checkbox5.checked and mainForm.checkbox6.checked){
		mainForm.static4.text = default_pars.efi_text + default_pars.efi_textall;
		var newname = io.joinpath(mainForm.edit.text,
							fsys.getFileName(default_pars.efiall_bin));
		if(io.exist(newname)){
			mainForm.edit4.text = newname;
		}
	}
	elseif(mainForm.checkbox5.checked){
		mainForm.static4.text = default_pars.efi_text + default_pars.efi_text32;
		var newname = io.joinpath(mainForm.edit.text,
							fsys.getFileName(default_pars.efi32_bin));
		if(io.exist(newname)){
			mainForm.edit4.text = newname;
		}
	}
	elseif(mainForm.checkbox6.checked){
		mainForm.static4.text = default_pars.efi_text + default_pars.efi_text64;
		var newname = io.joinpath(mainForm.edit.text,
							fsys.getFileName(default_pars.efi64_bin));
		if(io.exist(newname)){
			mainForm.edit4.text = newname;
		}
		mainForm.edit4.disabled = false;
		mainForm.button4.disabled = false;
	}
	else {
		mainForm.static4.text = default_pars.efi_text;
		mainForm.edit4.disabled = true;
		mainForm.button4.disabled = true;
	}
	setBootPar();
}

mainForm.checkbox17.oncommand = function(id,event){
	setBootPar();
}

mainForm.checkbox7.oncommand = function(id,event){
	if(mainForm.checkbox7.checked){
		mainForm.checkbox9.checked = false;
	}
	setFsysPar();
}

mainForm.checkbox8.oncommand = function(id,event){
	setFsysPar();
}

mainForm.checkbox9.oncommand = function(id,event){
	if(mainForm.checkbox9.checked){
		mainForm.checkbox7.checked = false;
	}
	setFsysPar();
}

mainForm.checkbox10.oncommand = function(id,event){
		if(mainForm.checkbox10.checked){
		mainForm.checkbox11.checked = false;
	}
	else {
		if(!mainForm.checkbox10.checked and !mainForm.checkbox11.checked){
			mainForm.checkbox10.checked = true;
		}
	}
	setFsysPar();
}

mainForm.checkbox11.oncommand = function(id,event){
		if(mainForm.checkbox11.checked){
		mainForm.checkbox10.checked = false;
	}
	else {
		if(!mainForm.checkbox10.checked and !mainForm.checkbox11.checked){
			mainForm.checkbox11.checked = true;
		}
	}
	setFsysPar();
}

mainForm.checkbox12.oncommand = function(id,event){
	setFsysPar();
}

mainForm.checkbox13.oncommand = function(id,event){
		if(mainForm.checkbox13.checked){
		mainForm.checkbox14.checked = false;
	}
	else {
		if(!mainForm.checkbox13.checked && !mainForm.checkbox14.checked){
			mainForm.checkbox13.checked = true;
		}
	}
	setFsysPar();
}

mainForm.checkbox14.oncommand = function(id,event){
		if(mainForm.checkbox14.checked){
		mainForm.checkbox13.checked = false;
	}
	else {
		if(!mainForm.checkbox13.checked && !mainForm.checkbox14.checked){
			mainForm.checkbox14.checked = true;
		}
	}
	setFsysPar();
}

mainForm.checkbox15.oncommand = function(id,event){
	setFsysPar();
}

mainForm.checkbox18.oncommand = function(id,event){
	if(mainForm.checkbox18.checked){
		if(!string.match(mainForm.edit8.text, "-[Qq]")){
			mainForm.edit8.text = mainForm.edit8.text + " -q";
		}
	}
	else {
		mainForm.edit8.text =
					string.replace(mainForm.edit8.text, "\s*-[Qq]", "");
	}

}

mainForm.combobox.oncommand = function(id,event){
	setFsysPar();
}

mainForm.edit6.onChange = function(){
	var mstr = string.match(mainForm.edit6.text, "\S{,32}");
	if(#mainForm.edit6.text != #mstr){
		if(#mainForm.edit6.text > 32){
			win.msgbox("字符长度不能大于 32。");
		}
		else {
			win.msgbox("不能使用 空格 字符。");
		}
	}
	setOtherPar();
}

import thread.manage;
var tmange = thread.manage(3);
var tmange_cb;
var tnum = 0;

var makeIso = function(oscdimg, basedir){
	import process.popen;
	import win.ui;
	import console;
	import fsys;
	import thread;
	var tid = thread.getId();
	fsys.setCurDir(basedir);
	var procs = process.popen.cmd(oscdimg);
	var toutput = procs.peekTo(">");
	return tid, toutput;
}

mainForm.button7.oncommand = function(id,event){
	setExePath();
		fsys.setCurDir(homedir);
	if(!io.exist(mainForm.edit5.text)){
		createOrder();
	}
	var exestr = mainForm.edit12.text;
	tnum ++;
	if(tnum > 3){
		if(statusbar.count() < tnum){
			statusbar.insertItem("线程已满", tnum, 200);
		}
		else {
			statusbar.setText("线程已满", tnum);
		}
		tnum --;
		mainForm.button7.disabled = true;
	}
	else {
		tmange_cb = tmange.create(makeIso, exestr, homedir);
		if(tmange_cb.id){
			if(statusbar.count() < tnum){
				statusbar.insertItem("线程：" + tmange_cb.id+ " 运行中。", tnum, 200);
			}
			else {
				statusbar.setText("线程：" + tmange_cb.id + " 运行中。", tnum);
			}
		}
	}
	tmange_cb.onEnd = function(...){
		var tid, toutput = ...;
		outputtab.edit.appendText(toutput);
		for(i=1;statusbar.count();1){
			var text = statusbar.getText(i);
			if(text){
				if(string.indexOf(text, tostring(tid))){
					statusbar.setText("线程：" + tid + " 已完成。", i);
				}
			}
		}
		tnum --;
		if(tnum < 3){
			mainForm.button7.disabled = false;
			statusbar.setText("", 4);
		}
	}
	tmange.waitOne();
	tmange.waitOne();
	tmange.waitOne();
	if(!tmange.busy()){
		tnum = 0;
		mainForm.button7.disabled = false
	}
}

mainForm.edit.wndproc = {
	[0x233/*_WM_DROPFILES*/] = function(hwnd,message,wParam,lParam){
		var dtext = win.getDropFile(wParam)[1];
		if(fsys.isDir(dtext)){
			mainForm.edit.text = dtext;
		}
		else {
			mainForm.edit.text = fsys.path.canonicalize(
										fsys.getParentDir(dtext));
		}
	}
}

mainForm.edit2.wndproc = {
	[0x233/*_WM_DROPFILES*/] = function(hwnd,message,wParam,lParam){
		var dtext = win.getDropFile(wParam)[1];
		if(fsys.isDir(dtext)){
			mainForm.edit2.text = dtext;
		}
		else {
			mainForm.edit2.text = fsys.path.canonicalize(
										fsys.getParentDir(dtext));
		}
	}
}

mainForm.edit3.wndproc = {
	[0x233/*_WM_DROPFILES*/] = function(hwnd,message,wParam,lParam){
		var dtext = win.getDropFile(wParam)[1];
		if(fsys.isDir(dtext)){
			win.msgbox("需要是一个文件，现在是目录。");
		}
		else {
			mainForm.edit3.text = dtext;
		}
	}
}

mainForm.edit4.wndproc = {
	[0x233/*_WM_DROPFILES*/] = function(hwnd,message,wParam,lParam){
		var dtext = win.getDropFile(wParam)[1];
		if(fsys.isDir(dtext)){
			win.msgbox("需要是一个文件，现在是目录。");
		}
		else {
			mainForm.edit4.text = dtext;
		}
	}
}

mainForm.edit5.wndproc = {
	[0x233/*_WM_DROPFILES*/] = function(hwnd,message,wParam,lParam){
		var dtext = win.getDropFile(wParam)[1];
		if(fsys.isDir(dtext)){
			win.msgbox("需要是一个文件，现在是目录。");
		}
		else {
			mainForm.edit5.text = dtext;
		}
	}
}

mainForm.edit7.wndproc = function(hwnd,message,wParam,lParam){
	select(message) {
		case 0x233/*_WM_DROPFILES*/ {
			mainForm.edit7.text = win.getDropFile(wParam)[1];
		}
	}
}

mainForm.edit.onChange = function(){
	fsys.setCurDir(homedir);
	if(io.exist(mainForm.edit.text)){
		var newname = io.joinpath(mainForm.edit.text,
							fsys.getFileName(mainForm.edit3.text));
		if(io.exist(newname)){
			mainForm.edit3.text = newname;
		}
		var newname = io.joinpath(mainForm.edit.text,
							fsys.getFileName(mainForm.edit4.text));
		if(io.exist(newname)){
			mainForm.edit4.text = newname;
		}
		setCmdPar();
	}
}

mainForm.edit3.onChange = function(){
	fsys.setCurDir(homedir);
	if(io.exist(mainForm.edit3.text)){
		setBootPar();
	}
}

mainForm.edit4.onChange = function(id,event){
	fsys.setCurDir(homedir);
	if(io.exist(mainForm.edit4.text)){
		setBootPar();
	}
}

mainForm.edit5.onChange = function(id,event){
	setOrderPar();
}

mainForm.edit2.onChange = function(){
	setCmdPar();
}
mainForm.edit7.onChange = function(){
	setCmdPar();
}
mainForm.edit8.onChange = function(){
	setCmdPar();
}
mainForm.edit9.onChange = function(){
	setCmdPar();
}
mainForm.edit10.onChange = function(){
	setCmdPar();
}
mainForm.edit11.onChange = function(){
	setCmdPar();
}

var setIniPar = function(...){
	/*var语句声明的变量作用域限于函数内部*/

}

subscribe("loadini",function(...){
	for(k,v in {...}){
		if(io.exist(v)){
			initPars(default_pars, readIniPar(v));
		}
	}
} )

subscribe("saveini",function(...){
	for(k,v in {...}){
		saveIniPar(v);
	}
} )

mainForm.checkbox19.oncommand = function(id,event){
	fsys.setCurDir(homedir);
	var spath = mainForm.edit12.text;
	if(mainForm.checkbox19.checked){
		mainForm.checkbox19.text = "绝对路径";
		for m in string.gmatch(mainForm.edit12.text, '"([^"]+?)"') {
			if(io.exist(io.fullpath(m))){
				mainForm.edit12.text = string.replace(
						mainForm.edit12.text, "@" + m, io.fullpath(m));
			}
		}
	}
	else {
		mainForm.checkbox19.text = "相对路径";
		for m in string.gmatch(mainForm.edit12.text, '"([^"]+?)"') {
			if(io.exist(fsys.path.relative(m, homedir))){
				mainForm.edit12.text = string.replace(
					mainForm.edit12.text, "@" + m, fsys.path.relative(m, homedir, false));
			}
		}
	}

}

mainForm.onClose = function(hwnd,message,wParam,lParam){
	saveIniPar();
}


mainForm.show();
return win.loopMessage();